{% block scalar_object_label -%}
    {% set label_attr = label_attr + {for: form.value.vars.id} -%}
    {% set required = form.value.vars.required %}
    {{ block('form_label') -}}
{% endblock %}

{% block scalar_object_widget -%}
    {% if not valid -%}
        {% set attr = {class: "#{attr.class ?? ''} has-error"} -%}
    {% endif -%}

    {{ form_widget(form.value, {attr: attr}) -}}
{% endblock %}

{% block scalar_object_row %}
    {% if form.value.vars.block_prefixes[form.value.vars.block_prefixes|length - 2]  == 'hidden' %}
        {{ form_widget(form) }}
    {% else %}
        {{ form_row(form, {compound: false}) }}
    {% endif %}
{% endblock %}

{% block vanio_date_widget %}
    <div class="input-group datepicker date" data-component-date-picker data-min-view="2">
        {% set type = 'text' %}
        {{ block('form_widget_simple') }}
        <span class="input-group-addon btn btn-primary"><i class="icon s7-date"></i></span>
    </div>
{% endblock %}

{% block file_widget %}
    <label
        class="custom-file form-control"
        data-input-placeholder="{{ inputPlaceholder ?? "file.#{attr.multiple is defined ? 'multiple' : 'single'}InputPlaceholder"|trans({}, translation_domain) }}"
        data-input-text="{{ inputText ?? "file.#{attr.multiple is defined ? 'multiple' : 'single'}InputText"|trans({}, translation_domain) }}"
        data-button-text="{{ buttonText ?? "file.#{attr.multiple is defined ? 'multiple' : 'single'}ButtonText"|trans({}, translation_domain) }}"
        data-component-file-input

        {% if filename is defined ? filename is not empty : data is not empty %}
            data-filename="{{ filename ?? data.basename }}"
        {% endif %}
    >
        {{ form_widget(form) }}
    </label>
{% endblock %}

{% block vanio_file_widget %}
    {{ form_widget(form.file, {
        filename: data ? data.metaData.name : null,
        inputPlaceholder: inputPlaceholder ?? null,
        inputText: inputText ?? null,
        buttonText: buttonText ?? null,
    }) }}
{% endblock %}

{% block image_widget %}
    {{ form_widget(form, {
        inputPlaceholder: "image.#{multiple ? 'multiple' : 'single'}InputPlaceholder"|trans({}, translation_domain),
        inputText: "image.#{multiple ? 'multiple' : 'single'}InputText"|trans({}, translation_domain),
        buttonText: "image.#{multiple ? 'multiple' : 'single'}ButtonText"|trans({}, translation_domain),
    }) }}
{% endblock %}

{% block uploaded_file_widget %}
    {% set options = {
        url: path('vanio_web_uploaded_file_upload', {thumbnailFilter: thumbnailFilter}),
        target: "##{form.files.vars.id}",
        maxFiles: multiple ? null : 1,
        acceptedFiles: accept,
        dictInvalidFileType: invalidMessage ?? 'uploadedFile.invalidMessage'|trans({}, translation_domain),
    } %}

    <div {{ block('widget_container_attributes') }}>
        <div class="uploaded-file" data-component-uploaded-file="{{ options|json_encode }}">
            <div class="dz-message">
                <span class="icon"></span>
                <h4 class="uploaded-file__short-upload-text">{{ shortUploadText ?? "uploadedFile.#{multiple ? 'multiple' : 'single'}ShortUploadText"|trans({}, translation_domain) }}</h4>
                <h4 class="uploaded-file__long-upload-text">{{ longUploadText ?? "uploadedFile.#{multiple ? 'multiple' : 'single'}LongUploadText"|trans({}, translation_domain) }}</h4>
            </div>
        </div>

        {{ form_widget(form.files, {attr: {style: "display: none; #{attr.style ?? ''}"}}) }}
        {{ form_rest(form) }}
    </div>
{% endblock %}

{% block uploaded_image_widget %}
    {{ form_widget(form, {
        shortUploadText: "uploadedImage.#{multiple ? 'multiple' : 'single'}ShortUploadText"|trans({}, translation_domain),
        longUploadText: "uploadedImage.#{multiple ? 'multiple' : 'single'}LongUploadText"|trans({}, translation_domain),
        invalidMessage: "uploadedImage.invalidMessage"|trans({}, translation_domain),
    }) }}
{% endblock %}

{% block vanio_range_widget %}
    {% set class = widget == 'slider' ? 'range-slider' : 'range' %}
    {% set attr = {class: "#{class_name(attr.class ?? '')} #{class}"} + attr %}

    {% if widget == 'slider' %}
        {% set attr = {
            'data-component-range-slider': {
                start: [form.minimum.vars.data ?? form.vars.minimum, form.maximum.vars.data ?? form.vars.maximum],
                range: {min: form.vars.minimum, max: form.vars.maximum},
                step: 1,
                connect: true,
            }|json_encode
        } + attr %}
    {% endif %}

    <div {{ block('widget_container_attributes') }}>
        {% if not form.parent %}
            {{ form_errors(form) }}
        {% endif %}

        <div class="form-group {{ class }}__group {{ class }}__group--minimum">
            {{ form_label(form.minimum, null, {label_attr: {class: "#{class_name(form.minimum.label_attr.class ?? '')} #{class}__label #{class}__label--minimum"}}) }}
            {{ form_widget(form.minimum, {attr: {class: "#{class_name(form.minimum.attr.class ?? '')} #{class}__value #{class}__value--minimum"}}) }}
            {{ form_errors(form.minimum) }}
        </div>

        <div class="form-group {{ class }}__group {{ class }}__group--maximum">
            {{ form_label(form.maximum, null, {label_attr: {class: "#{class_name(form.maximum.label_attr.class ?? '')} #{class}__label #{class}__label--maximum"}}) }}
            {{ form_widget(form.maximum, {attr: {class: "#{class_name(form.maximum.attr.class ?? '')} #{class}__value #{class}__value--maximum"}}) }}
            {{ form_errors(form.maximum) }}
        </div>
    </div>
{% endblock %}

{% block location_label %}
    {% set label_attr = label_attr + {for: form.address.vars.id} %}
    {{ block('form_label') }}
{% endblock %}

{% block location_widget %}
    {% set attr = {
        class: "#{class_name(attr.class ?? '')} location",
        'data-component-location': '{}',
    } + attr %}

    <div {{ block('widget_container_attributes') }}>
        {% if not form.parent %}
            {{ form_errors(form) }}
        {% endif %}

        {{ form_row(form.address, {attr: {class: "#{class_name(form.address.vars.attr.class ?? '')} location__address"}} + (icon is defined ? {icon: icon} : [])) }}
        {{ form_row(form.latitude, {attr: {class: "#{class_name(form.latitude.vars.attr.class ?? '')} location__latitude"}}) }}
        {{ form_row(form.longitude, {attr: {class: "#{class_name(form.longitude.vars.attr.class ?? '')} location__longitude"}}) }}
        {{ form_rest(form) }}
        <div class="form-errors location__not-found">{{ 'location.notFound'|trans({}, translation_domain) }}</div>
    </div>

    {{ require_js_once("//maps.googleapis.com/maps/api/js?libraries=places&key=#{googleMapsApiKey}") }}
{% endblock %}

{% block form_toggle_widget %}
    {% set attr = {class: "#{class_name(attr.class ?? '')} form-toggle"} + attr %}

    <div {{ block('widget_container_attributes') }}>
        {% if not form.parent %}
            {{ form_errors(form) }}
        {% endif %}

        {{ form_widget(form[toggleName], {prepend: true, attr: {class: "#{class_name(form[toggleName].vars.attr.class ?? '')} form-toggle__toggle"}}) }}
        {{ form_errors(form[toggleName]) }}

        <div class="form-group form-toggle__form">
            {{ form_label(form[formName]) }}
            {{ form_widget(form[formName]) }}
            {{ form_errors(form[formName]) }}
        </div>

        {{ form_rest(form) }}
    </div>
{% endblock %}

{% block auto_complete_entity_widget %}
    {% set attr = {class: "#{class_name(attr.class ?? '')} #{valid ? '' : 'has-error'} auto-complete"} + attr %}

    <div {{ block('widget_container_attributes') }}>
        {{ form_label(form.search) }}
        {{ form_widget(form.search, {attr: {class: "#{class_name(form.search.vars.attr.class ?? '')} auto-complete__search"}}) }}
        <input type="hidden" {% if form.entity.vars.value is not empty %}value="{{ form.entity.vars.value }}" {% endif %} {% with form.entity.vars + {attr: {class: "#{class_name(form.entity.vars.attr.class ?? '')} auto-complete__entity"} + form.entity.vars.attr} only %}{{ block('widget_attributes') }}{% endwith %}>
    </div>
{% endblock %}

{% block collection_widget %}
    {% from _self import collection_entry %}

    {% set parent = form.parent %}
    {% set collectionLevel = 0 %}

    {% for i in range(1, 50) if parent is not same as(null) %}
        {% if 'collection' in parent.vars.block_prefixes %}
            {% set collectionLevel = collectionLevel + 1 %}
        {% endif %}

        {% set parent = parent.parent %}
    {% endfor %}

    {% set prefix =  collectionLevel ? "collection-level-#{collectionLevel}" : 'collection' %}
    {% set attr = {class: "#{class_name(attr.class ?? '')} #{prefix}"} + attr + {'data-component-collection': {prefix: prefix}} %}

    {% if restore_order|default(false) %}
        {% set attr = {'data-component-collection': attr['data-component-collection'] + {preserve_names: true}} + attr %}
    {% endif %}

    <div {{ block('widget_container_attributes') }}>
        {% set entry = prototype ?? form|first %}

        {% if entry %}
            {% if entry.vars.compound and not (entry.vars.nonCompoundWrapper ?? false) %}
                <div class="{{ prefix }}__header">
                    {% for child in entry %}
                        {% set type = child.vars.block_prefixes[child.vars.block_prefixes|length - 2] %}

                        {% if 'hidden' not in child.vars.block_prefixes and (type != 'scalar_object' or 'hidden' not in child.value.vars.block_prefixes) %}
                            {% set label = form_label(child, null, {widget: ''}) %}

                            {% if label matches '~\\sclass\\s*=\\s*["\'](?:[^"\']*\\s+)?form-group(?:\\s+[^"\']*)?["\']~' %}
                                {{ label|raw }}
                            {% else %}
                                <div class="form-group">{{ label|raw }}</div>
                            {% endif %}
                        {% endif %}
                    {% endfor %}

                    <span class="{{ prefix }}-actions"></span>
                </div>
            {% endif %}
        {% endif %}

        <div
            class="{{ prefix }}__body"
            {% if prototype is defined %}data-prototype="{{ collection_entry(prototype, prefix)|e('html_attr') }}"{% endif %}
            {% if prototype is defined %}data-prototype-name="{{ prototype.vars.name }}"{% endif %}
            data-allow-add="{{ allow_add }}"
            data-allow-remove="{{ allow_delete }}"
            data-name-prefix="{{ full_name }}"
        >
            {% for child in form %}
                {{ collection_entry(child, prefix) }}
            {% endfor %}
        </div>

        {{ form_rest(form) }}
    </div>
{% endblock %}

{% macro collection_entry(form, prefix = 'collection') %}
    {% set isCompound = form.vars.compound and not (form.vars.nonCompoundWrapper ?? false) %}

    <div {{ isCompound ? form_widget_attributes(form, {attr: {class: "#{prefix}__entry #{form.vars.attr.class ?? ''}"}}) : ('class="' ~ prefix ~ '__entry"')|raw }}>
        {% if isCompound %}
            {% for child in form %}
                {{ form_row(child) }}
            {% endfor %}
        {% else %}
            {{ form_row(form) }}
        {% endif %}

        <div class="{{ prefix }}-actions">
            {{ form_block('actions', form, {prefix: prefix}) }}
        </div>
    </div>
{% endmacro %}

{% block form_actions %}
    <a href="#" class="{{ prefix }}-remove"></a>
    <a href="#" class="{{ prefix }}-move"></a>
    <a href="#" class="{{ prefix }}-add"></a>
{% endblock %}
